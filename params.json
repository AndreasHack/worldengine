{"name":"Lands","tagline":"World generator using simulation of plates, rain shadow, erosion, etc.","body":"Lands - a world generator\r\n=========================\r\n\r\n[![Build Status](https://travis-ci.org/Mindwerks/lands.svg?branch=master)](https://travis-ci.org/ftomassetti/lands)\r\n\r\n_Current version: 0.5.3_\r\n\r\nYou can generate worlds data (heighmap, biome, etc.) and images for your own worlds.\r\n\r\nFor example:\r\n\r\n```bash\r\n# Lands 0.5.1 or next\r\nlands world -s 1 -n seed1\r\n\r\n# Lands 0.5.0 or previous\r\npython lands/generator.py world -s 1 -n seed1\r\n```\r\n\r\nWorlds are generated using plate simulations, erosion, rain shadows, Holdridge life zones model and plenty of other phenomenons.\r\n\r\nOnce a world it can be used for simulation civs evolution (see project [civs](https://github.com/ftomassetti/civs)).\r\n\r\nFor a generated world is also possible to generate additional maps, for example ancient looking map:\r\n\r\n```bash\r\n# Lands 0.5.1 or next\r\nlands ancient_map -w seed1.world\r\n\r\n# Lands 0.5.0 or previous\r\npython lands/generator.py ancient_map -w seed1.world\r\n```\r\n\r\n![](https://raw.githubusercontent.com/ftomassetti/lands/master/examples/ancient_map_seed1.png)\r\n\r\nGui\r\n===\r\n\r\nSince version 0.5.0 an experimental (and limited!) GUI is available. \r\n\r\n```\r\nlandsgui\r\n```\r\n\r\nNote: it requires to install QT (available here [http://qt-project.org/](http://qt-project.org/))\r\n\r\nInstall\r\n=======\r\n\r\n### Using pip\r\n\r\n```\r\npip install lands\r\n```\r\n\r\n### From source code\r\n\r\n```\r\ngit clone or download the code\r\n\r\n# before using lands: if you plan to change the code\r\npython setup.py develop \r\n\r\n# before using lands: if you want just to install lands\r\n# on unix-ish system you could have to prepend sudo\r\npython setup.py install\r\n```\r\n\r\n### _On Windows_\r\n\r\nExecutable file is available under [releases](https://github.com/ftomassetti/lands/releases)\r\n\r\nNote: you need also a copy of the lands src directory in the same folder as the exe.\r\n\r\nIf you want to build Lands on Windows you can read these [instructions](https://github.com/ftomassetti/lands/wiki/Lands-on-Windows).\r\n\r\nNote: the problem could crash after generating the files, it is a known problem but you should have anyway your nice maps generated! We are working on a fix for that\r\n\r\nDependencies\r\n============\r\n\r\nThe gui is based on QT, so you will need to install them\r\n\r\nOutput\r\n======\r\n\r\nThe program produces a binary format with all the data of the generated world and a set of images. For examples seed 1 produces.\r\n\r\n## Elevation Map\r\n\r\n![](https://raw.githubusercontent.com/ftomassetti/lands/master/examples/world_seed_1_elevation.png)\r\n\r\n## Precipitation Map\r\n\r\n![](https://raw.githubusercontent.com/ftomassetti/lands/master/examples/world_seed_1_precipitation.png)\r\n\r\n## Temperature Map\r\n\r\n![](https://raw.githubusercontent.com/ftomassetti/lands/master/examples/world_seed_1_temperature.png)\r\n\r\n## Biome Map\r\n\r\n![](https://raw.githubusercontent.com/ftomassetti/lands/master/examples/world_seed_1_biome.png)\r\n\r\n## Ocean Map\r\n\r\n![](https://raw.githubusercontent.com/ftomassetti/lands/master/examples/world_seed_1_ocean.png)\r\n\r\nUsage\r\n=====\r\n\r\n```\r\nlands [options] [world|plates|ancient_map]\r\n```\r\n_Note that options were changed in version 0.5.3_\r\n\r\n### General options\r\n\r\n| Short     | Long | Description |\r\n|-----------|------|-------------|\r\n| -o DIR    | --output-dir=DIR | generate files in DIR default = '.' |\r\n| -n STR    | --worldname=STR | set world name to STR |\r\n| -b        | --protocol-buffer | save world using protocol buffer format (smaller file) |\r\n| -s N      | --seed=N | use SEED to initialize the pseudo-random generation |\r\n| -t STR    | --step=STR | use STEP to specify how far to proceed in the world generation process. Valid values are: plates precipitations full |\r\n| -x N      | --width=N | WIDTH of the world to be generated |\r\n| -y N      | --height=N | HEIGHT of the world to be generated |\r\n| -q N   | --number-of-plates=N | number of plates |\r\n|       | --recursion-limit=N | you need that just if you encounter an error while generating very large maps |\r\n| -v    | --verbose | Enable verbose messages |\r\n\r\n### Options valid only for generate\r\n\r\n| Short     | Long | Description |\r\n|-----------|------|-------------|\r\n| -r FILE   | --rivers=FILE | produce a map of reivers, after the option it expects the name of the file where to generate the map  |\r\n| --gs=FILE  | --grayscale-heightmap=FILE | produce a grayscale heightmap, after the option it expects the name of the file where to generate the heightmap |\r\n|   | --ocean_level=N   |  elevation cut off for sea level (default = 1.0) |\r\n\r\n### Options valid only for ancient map operations\r\n\r\n| Short     | Long | Description |\r\n|-----------|------|-------------|\r\n| -w FILE   | --worldfile=FILE | WORLD_FILE to be loaded |\r\n| -g FILE   | --generatedfile=FILE | name of the GENERATED_FILE |\r\n| -f N   | --resize-factor=N | resize factor |\r\n\r\nFor example these commands:\r\n\r\n```python\r\npython lands/generator.py world -s 4 -n an_example -p 2048 -q 25 -x 2048 -y 2048\r\n```\r\n\r\nProduce this output\r\n\r\n```\r\nLands - world generator\r\n-----------------------\r\n seed              : 4\r\n name              : seed3\r\n width             : 2048\r\n height            : 2048\r\n plates resolution : 2048\r\n number of plates  : 25\r\n operation         : world generation\r\n step              : full\r\n\r\nstarting (it could take a few minutes) ...\r\n...plates simulated\r\n...elevation noise added\r\n...elevation level calculated\r\n...precipations calculated\r\n...erosion calculated\r\n...humidity calculated\r\n...permeability level calculated\r\n\r\nBiome obtained:\r\n     subtropical thorn woodland =   16353\r\n                tropical desert =     188\r\n             boreal rain forest =   69472\r\n        tropical thorn woodland =   19680\r\n            subpolar dry tundra =    6316\r\n      warm temperate wet forest =   17799\r\n            subpolar wet tundra =   24453\r\n          subpolar moist tundra =   15104\r\n            tropical wet forest =   18441\r\n           subpolar rain tundra =   79723\r\n           tropical rain forest =    5906\r\n                            ice =   85254\r\n          tropical moist forest =   28871\r\n        subtropical rain forest =   14733\r\n            boreal moist forest =   24395\r\n              boreal wet forest =   35212\r\n         subtropical dry forest =   26259\r\n       subtropical desert scrub =    3256\r\n       subtropical moist forest =   25220\r\n    cool temperate desert scrub =   11162\r\n          cool temperate steppe =   25604\r\n               boreal dry scrub =   13403\r\n            tropical dry forest =   22415\r\n       tropical very dry forest =   27033\r\n          tropical desert scrub =    2473\r\n    warm temperate moist forest =   27704\r\n    warm temperate desert scrub =    4861\r\n     warm temperate rain forest =   10774\r\n    cool temperate moist forest =   42770\r\n      cool temperate wet forest =   52813\r\n      warm temperate dry forest =   29992\r\n                          ocean = 3314282\r\n          cool temperate desert =    2950\r\n             subtropical desert =     287\r\n          warm temperate desert =     709\r\n     cool temperate rain forest =   46844\r\n         subtropical wet forest =   18280\r\n                  boreal desert =    5445\r\n     warm temperate thorn scrub =   16175\r\n                   polar desert =    1693\r\n\r\nProducing ouput:\r\n* world data saved in './an_example.world'\r\n* ocean image generated in './an_example_ocean.png'\r\n* precipitation image generated in './an_example_precipitation.png'\r\n* temperature image generated in './an_example_temperature.png'\r\n* biome image generated in './an_example_biome.png'\r\n* elevation image generated in './an_example_elevation.png'\r\n...done\r\n\r\n```\r\n\r\nThis is the corresponding ancient map\r\n\r\n```python\r\npython lands/generator.py ancient_map -w an_example.world\r\n```\r\n\r\n![](https://raw.githubusercontent.com/ftomassetti/lands/master/examples/ancient_map_large.png)\r\n\r\nAlgorithm\r\n=========\r\n\r\nThe world generation algorithm goes through different phases:\r\n* plates simulation: it is the best way to get proper mountain chains. For this [pyplatec](https://github.com/ftomassetti/pyplatec) is used\r\n* noise techniques are used at different steps\r\n* precipitations are calculated considering latitude and rain shadow effects\r\n* erosion is calculated\r\n* humidity in each zone is calculated\r\n* terrain permeability is calculated\r\n* biome is calculated using the [Holdridge life zones](http://en.wikipedia.org/wiki/Holdridge_life_zones) model\r\n\r\nInstall dependencies\r\n====================\r\n\r\nUsing virtualenv you can install the dependencies in this way\r\n\r\nPython 2:\r\n```bash\r\nvirtualenv venv\r\nsource venv/bin/activate    \r\npip install -r requirements2.txt\r\n```\r\n\r\nPython 3:\r\n```bash\r\npyvenv venv3\r\nsource venv3/bin/activate    \r\npip3 install -r requirements3.txt\r\n```\r\n\r\nDo you have problems or suggestions for improvements?\r\n=====================================================\r\n\r\nPlease write to me!\r\nYou can write at f _dot_ tomassetti _at_ gmail _dot_ com\r\nThank you, all the feedback is precious for me!\r\n\r\nRequirements\r\n============\r\n\r\nLibjpeg and libtiff are required by PIL\r\n\r\nContributors\r\n============\r\n\r\nAll contributions, questions, ideas are more than welcome!\r\nFeel free to open an issue or drop me an e-mail.\r\n\r\nI would like to thank you great people who helped me while working on Lands:\r\n\r\n* [Evan Sampson](https://github.com/esampson) contributed the amazing implementation of the Holdridge life zones model and improved a lot the ancient-looking-map, biome, precipitation and temperature generators. Thanks a million!\r\n\r\n* [Ryan](https://github.com/SourceRyan) contributed the Windows binary version and discussed Lands on Reddit bringing a lot of users. Thanks a million!\r\n\r\n* [stefan-feltmann](https://github.com/stefan-feltmann) made Lands depends on pillow instead that on PIL (which is deprecated). This could also help when moving to Python 3. Thanks a million!\r\n\r\n* [Russell Brinkmann](https://github.com/rbb) helped saving the generation parameters in the generated world (so that we can use it to generate the same world again, for example), improved the command line options and added tracing information (useful for understanding the performance of the various generation steps)\r\n\r\nLicense\r\n=======\r\n\r\nLands is available under the MIT License. You should find the LICENSE in the root of the project.\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}